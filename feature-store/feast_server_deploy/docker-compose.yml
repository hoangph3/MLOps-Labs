---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:7.0.4
    container_name: redis
    ports:
      - "6379:6379"

  kafka_events:
    image: feast-kafka-events
    build:
      context: .
      dockerfile: kafka_demo/Dockerfile
    depends_on:
      - broker
    container_name: kafka_events

  push_server:
    image: feast-push-server
    container_name: feast_push_server
    build:
      context: .
      dockerfile: feature_repo/Dockerfile
    depends_on:
      feature_server:
        condition: service_healthy
      registry:
        condition: service_healthy
    ports:
      - "6567:6566"
    links:
      - redis

  feature_server:
    image: feast-feature-server
    container_name: feast_feature_server
    build:
      context: .
      dockerfile: feature_repo/Dockerfile
    depends_on:
      registry:
        condition: service_healthy
    ports:
      - "6566:6566"
    links:
      - redis
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:6566/health}"
      interval: "5s"
      retries: 5

  registry:
    container_name: registry
    image: postgres:14.0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=feast
    ports:
      - "5432:5432"
    volumes: 
      - ./feast-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
